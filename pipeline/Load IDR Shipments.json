{
	"name": "Load IDR Shipments",
	"properties": {
		"activities": [
			{
				"name": "IDR To Storage",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get Last Load Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": "select * from\n(select *\nfrom clxbw.apo_bw_b_billing\nwhere to_char(load_date,'yyyymmdd') > @{activity('Get Last Load Date').output.firstRow.max_idr_load_date} \nand material_num in (select material_num from clxbw.apo_bw_d_material where division_name like '%Litter%')\nand billto_customer_code in (select customer_code from clxbw.apo_bw_d_customer where customer_name_1 like '%WAL-MART%')\nunion\nselect *\nfrom clxbw.apo_bw_b_billing\nwhere to_char(load_date,'yyyymmdd')  > @{activity('Get Last Load Date').output.firstRow.max_idr_load_date}\nand material_num in (select material_num from clxbw.apo_bw_d_material where division_name like '%Litter%')\nand payer_customer_code in (select customer_code from clxbw.apo_bw_d_customer where customer_name_1 like '%DOLLAR GENERAL CORP%')\nunion\nselect *\nfrom clxbw.apo_bw_b_billing\nwhere to_char(load_date,'yyyymmdd') > @{activity('Get Last Load Date').output.firstRow.max_idr_load_date}\nand material_num in (select material_num from clxbw.apo_bw_d_material where division_name like '%Litter%')\nand payer_customer_code in (select customer_code from clxbw.apo_bw_d_customer where customer_name_1 like '%KROGER%'))\nwhere rownum < 10;",
						"partitionOption": "None",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "Table_Oracle_IDR_Shipments",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "CSV_Incremental_IDR_Litter_Shipments",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Load SQLDW Target",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Load SQLDW Staging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"sink": {
						"type": "SqlDWSink"
					},
					"enableStaging": false
				},
				"outputs": [
					{
						"referenceName": "Table_SQLDW_Base_Litter_Shipments",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Failure Alert - 1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "IDR To Storage",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Send email on failure",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"EmailTo": "kalyani.pernapati@clorox.com",
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Activity": "Copy_IDR_Litter_Shipments_Storage",
						"ErrorMessage": {
							"value": "@activity('IDR To Storage').Error.Message",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Failure Alert - 3",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Load SQLDW Target",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Send email on failure",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"EmailTo": "kalyani.pernapati@clorox.com",
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Activity": "Load SQLDW Target",
						"ErrorMessage": {
							"value": "@activity('Load SQLDW Target').Error.Message",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Pipeline Success Notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Load SQLDW Target",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Send email on success",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"EmailTo": "kalyani.pernapati@clorox.com",
						"Subject": "ADF pipeline Load IDR Litter Shipments finished successfully",
						"DataFactoryName": "ADF",
						"PipelineName": "Load IDR Litter Shipments",
						"Activity": "Load IDR Litter Shipments",
						"ErrorMessage": "No errors"
					}
				}
			},
			{
				"name": "Get Last Load Date",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "select CONVERT(VARCHAR(10), max(idr_load_date), 112)  as max_idr_load_date from base_litter_shipments",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "Query_SQLDW_Base_Litter_Shipments",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Load SQLDW Staging",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "IDR To Storage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "SqlDWSink"
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "CSV_Incremental_IDR_Litter_Shipments_AZ",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Table_SQLDW_Staging_Litter_Shipments",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Failure Alert - 2",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Load SQLDW Staging",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Send email on failure",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"EmailTo": "kalyani.pernapati@clorox.com",
						"Subject": "Azure DF error",
						"DataFactoryName": "DF",
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Activity": "Load SQLDW Staging",
						"ErrorMessage": "@activity('Load SQLDW Staging').Error.Message"
					}
				}
			}
		],
		"parameters": {
			"IDR_Load_Date": {
				"type": "string"
			}
		},
		"annotations": []
	}
}